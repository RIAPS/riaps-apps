// RIAPS Modbus (TCP) Device Testing

app RIAPSModbusTCP {
    message ModbusCommand;     // send Modbus action Request 
    message ModbusResponse;    // get response from Modbus action  
    message ModbusTCPData;
    
    library tcpModbusLib;
 
    // Modbus (TCP) device interface
    //     considered the server for the request/response interaction
    device ModbusTcpReqRepDevice(slaveaddress=3,ipaddress = '192.168.10.110',port=502,serialTimeout=1.0) {      
      rep modbusRepPort : (ModbusCommand,ModbusResponse);	
      timer clock 2000;             //life signal
    }
    
    // Example Component to show Modbus I/F usage
    component ComputationalComponent(Ts = 0.1, ip = 91) {
      timer clock 8000;  
      pub tx_modbusTCPData : ModbusTCPData;
      req modbusReqPort : (ModbusCommand,ModbusResponse); // Port used to communicate with the ModbusUartDevice
    }    
    
    // Logging
    component ModbusTCPLogger() {
    	timer clock 8000;
        sub rx_modbusTCPData : ModbusTCPData;
    }

    
    // Modbus Communication Example actor
    actor ModbusExampleActor(TsArg, ipArg) {
        local ModbusCommand,ModbusResponse;	// Local message types
        {
            modbus : ModbusTcpReqRepDevice(slaveaddress=3,ipaddress = '192.168.10.110',port=502,serialTimeout=1.0) ;  // Slave Address is in decimal
            commInitiator : ComputationalComponent( Ts = TsArg, ip = ipArg );      	
        }
     
    }
	actor ModbusTCPlogger(){
		{   	
	    	logger : ModbusTCPLogger();	
	    }
	}
}
